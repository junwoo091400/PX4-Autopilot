name: Custom Model SITL Tests

on:
  push:
    branches:
    - 'develop'
    - 'release/*'
  pull_request:
    branches:
    - '**'

jobs:
  sitl_tests:
    name: ${{ matrix.config.org }} ${{ matrix.config.airframe }}
    runs-on: ubuntu-latest
    container:
      image: px4io/px4-dev-simulation-focal:2021-09-08
      options: --privileged --ulimit core=-1 --security-opt seccomp=unconfined
    strategy:
      fail-fast: false
      matrix:
        config:
          - {org: Freefly, airframe: Astro, model: "astro_without_camera" }
          - {org: Avy, airframe: Aera, model: "aera_without_camera" }
          - {org: Quantum Systems, airframe: Vector, model: "vector_without_camera" }
    steps:
    # see https://github.com/actions/checkout/issues/14
    - uses: actions/checkout@v1
    - name: disable the keychain credential helper
      run: git config --global credential.helper ""
    - name: enable the local store credential helper
      run: git config --global --add credential.helper store
    - name: add credential
      run: echo "https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com" >> ~/.git-credentials
    - name: tell git to use https instead of ssh whenever it encounters it
      run: 'git config --global url."https://github.com/".insteadof git@github.com:'
    - name: get submodules
      run: 'git submodule update --init --recursive'

    - name: Download MAVSDK
      run: wget "https://github.com/mavlink/MAVSDK/releases/download/v$(cat test/mavsdk_tests/MAVSDK_VERSION)/mavsdk_$(cat test/mavsdk_tests/MAVSDK_VERSION)_ubuntu20.04_amd64.deb"
    - name: Install MAVSDK
      run: dpkg -i "mavsdk_$(cat test/mavsdk_tests/MAVSDK_VERSION)_ubuntu20.04_amd64.deb"

    # Clone model database
    - name: Clone model database
      run: git clone --recursive git@github.com:Auterion/ci_gazebo_models.git ci_gazebo_models
    - name: Checkout matching version
      run: |
          cd ci_gazebo_models
          git checkout af564093d70055d70f786e0a3ca3118a0897efc0
          git submodule update --init --recursive
          cd -
    - name: Copy Custom airframe configs
      run: source ci_gazebo_models/setup.bash ci_gazebo_models .
      shell: bash
    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")
    - name: ccache cache files
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: sitl_tests-RelWithDebInfo-ccache-${{steps.ccache_cache_timestamp.outputs.timestamp}}
        restore-keys: sitl_tests-RelWithDebInfo-ccache-
    - name: setup ccache
      run: |
          mkdir -p ~/.ccache
          echo "base_dir = ${GITHUB_WORKSPACE}" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          echo "compression_level = 6" >> ~/.ccache/ccache.conf
          echo "max_size = 400M" >> ~/.ccache/ccache.conf
          ccache -s
          ccache -z
    - name: check environment
      env:
        PX4_CMAKE_BUILD_TYPE: "RelWithDebInfo"
      run: export
    - name: Build PX4
      env:
        PX4_CMAKE_BUILD_TYPE: "RelWithDebInfo"
      run: make px4_sitl_rtps
    - name: ccache post-run px4/firmware
      run: ccache -s
    - name: Build SITL Gazebo
      env:
        PX4_CMAKE_BUILD_TYPE: "RelWithDebInfo"
      run: make px4_sitl_rtps sitl_gazebo
    - name: ccache post-run sitl_gazebo
      run: ccache -s
    - name: Build MAVSDK tests
      env:
        PX4_CMAKE_BUILD_TYPE: "RelWithDebInfo"
        DONT_RUN: 1
      run: make px4_sitl_rtps gazebo mavsdk_tests
    - name: ccache post-run mavsdk_tests
      run: ccache -s
    - name: Run SITL tests
      env:
        PX4_CMAKE_BUILD_TYPE: "RelWithDebInfo"
      run: |
          test/mavsdk_tests/mavsdk_test_runner.py \
            --speed-factor 1 \
            --abort-early \
            --verbose \
            --model ${{ matrix.config.model }} \
            --build-dir build/px4_sitl_rtps/ \
            ci_gazebo_models/configs/sitl.json
    - name: Upload custom SITL logs as artifacts
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: flight-logs-${{ matrix.config.model }}
        path: build/px4_sitl_rtps/tmp_mavsdk_tests/rootfs/log/
        retention-days: 5
